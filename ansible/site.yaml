---

- name: Deploy LXD
  hosts: default
  become: false
  tags: container
  handlers:
    - name: reboot hostA
      delegate_to: hostA
      reboot:

    - name: reload udev rules
      command: udevadm control --reload-rules
      become: true

  tasks:
    - name: Disable lxdbr0 multicast snooping
      become: true
      copy:
        dest: /etc/udev/rules.d/99-disable-lxdbr0-mcast-snooping.rules
        content: SUBSYSTEM=="net", ACTION=="add", KERNEL=="lxdbr0", RUN+="/bin/sh -c 'echo 0 > /sys/class/net/lxdbr0/bridge/multicast_snooping'"
      notify: reload udev rules

    - meta: flush_handlers

    - name: Initialize LXD
      command:
        cmd: lxd init --preseed
        stdin: "{{ lookup('file', 'lxd_preseed.yaml') }}"
        creates: /var/snap/lxd/common/state

    - name: Create first container
      lxd_container:
        name: hostA
        state: started
        config:
          volatile.eth0.hwaddr: "00:16:3e:ee:00:0a"
        source:
          type: image
          mode: pull
          server: https://cloud-images.ubuntu.com/releases/
          protocol: simplestreams
          alias: focal
        profiles: ["default"]
        wait_for_ipv4_addresses: true

    - name: Disable systemd-networkd IPv6 handling (workaround broken redirects)
      delegate_to: hostA
      lineinfile:
        path: /etc/netplan/50-cloud-init.yaml
        insertafter: "^            dhcp4: true"
        line:         "            accept-ra: false"
      notify: reboot hostA

    - name: Enable kernel-level IPv6 autoconf (workaround broken redirects)
      delegate_to: hostA
      copy:
        dest: /etc/sysctl.d/99-accept_ra.conf
        content: "net.ipv6.conf.eth0.accept_ra = 1"
      notify: reboot hostA

    - name: Hack enable kernel-level IPv6 autoconf (workaround broken redirects)
      delegate_to: hostA
      copy:
        dest: /etc/rc.local
        mode: u=rwx,g=rx,o=rx
        content: '#!/bin/sh

          sysctl -w net.ipv6.conf.eth0.accept_ra=1

          '
      notify: reboot hostA

    - meta: flush_handlers

    - name: Install python3-apt
      delegate_to: hostA
      command:
        cmd: apt-get -y install python3-apt
        creates: /usr/lib/python3/dist-packages/apt/package.py

    - name: Install necessary packages
      delegate_to: hostA
      package:
        update_cache: true
        name:
          - python3-pip
          - python3
          - tcpdump
          - wget
          - libpcap-dev
          - libssl-dev
          - gcc
          - python3-setuptools
          - git
          - make
          - man
          - nftables
          - iptables
          - nmap
          - tshark
          - nano
          - joe
          - vim

    - name: Upgrade pip3
      delegate_to: hostA
      pip:
        executable: pip3
        state: latest
        name: pip

    - name: Install python packages
      delegate_to: hostA
      pip:
        executable: pip3
        state: latest
        name:
          - scapy[basic]
          - cryptography
          - netaddr

    - name: Clone IPv6 toolkit repository
      delegate_to: hostA
      git:
        repo: https://github.com/fgont/ipv6toolkit
        dest: /usr/src/ipv6toolkit
      register: clone_toolkit

    - name: Compile the IPv6 toolkit
      delegate_to: hostA
      command:
        cmd: make all
        chdir: /usr/src/ipv6toolkit
      when: clone_toolkit.changed
      register: compile_toolkit

    - name: Install the IPv6 toolkit
      delegate_to: hostA
      command:
        cmd: make install
        chdir: /usr/src/ipv6toolkit
      when: compile_toolkit.changed

    - name: Clone the THC-IPv6 repository
      delegate_to: hostA
      git:
        repo: https://github.com/vanhauser-thc/thc-ipv6
        dest: /usr/src/thc-ipv6
      register: clone_thc

    - name: Compile the THC-IPv6 toolkit
      delegate_to: hostA
      command:
        cmd: make
        chdir: /usr/src/thc-ipv6
      when: clone_thc.changed
      register: compile_thc

    - name: Install the THC-IPv6 toolkit
      delegate_to: hostA
      command:
        cmd: make install
        chdir: /usr/src/thc-ipv6
      when: compile_thc.changed

    - name: Download Termshark x64
      delegate_to: hostA
      when: ansible_architecture == "x86_64"
      unarchive:
        src: https://github.com/gcla/termshark/releases/download/v2.4.0/termshark_2.4.0_linux_x64.tar.gz
        remote_src: yes
        dest: /usr/local/bin/
        extra_opts:
          - --transform
          - "s_^.*/__"

    - name: Download Termshark arm64
      delegate_to: hostA
      when: ansible_architecture == "aarch64"
      unarchive:
        src: https://github.com/gcla/termshark/releases/download/v2.4.0/termshark_2.4.0_linux_arm64.tar.gz
        remote_src: yes
        dest: /usr/local/bin/
        extra_opts:
          - --transform
          - "s_^.*/__"

    - name: Clone container
      lxd_container:
        name: "{{ item.name }}"
        config:
          volatile.eth0.hwaddr: "{{ item.mac }}"
        state: started
        source:
          type: copy
          source: hostA
        profiles: ["default"]
        wait_for_ipv4_addresses: true
      with_items:
        - name: hostB
          mac: 00:16:3e:ee:00:0b
        - name: hostC
          mac: 00:16:3e:ee:00:0c

- name: Host provision
  hosts: default
  become: true
  tags: host
  tasks:
    - name: Install python3-apt
      command:
        cmd: apt-get -y install python3-apt
        creates: /usr/lib/python3/dist-packages/apt/package.py

    - name: Import Debian Stretch repo key (for tmux 2.3)
      apt_key:
        url: "https://ftp-master.debian.org/keys/archive-key-9.asc"

    - name: Enable Debian Stretch repo (for tmux 2.3)
      apt_repository:
        repo: deb http://archive.debian.org/debian stretch main

    - name: Check tmux version
      command: tmux -V
      changed_when: false
      ignore_errors: true
      register: tmux_v

    - name: Uninstall newer tmux
      apt:
        package: tmux
        state: absent
        autoremove: yes
      when: tmux_v.stdout != "tmux 2.3"
      ignore_errors: true

    - name: Install tmux dependency
      apt:
        package: libtinfo5

    - name: Install tmux from Debian Stretch
      apt:
        package: tmux
        default_release: stretch

    - name: Install necessary packages
      apt:
        package:
          - nginx
          - libwebsockets8

    - name: Setup WebSockets connection upgrade
      copy:
        src: nginx/connection_upgrade.conf
        dest: "/etc/nginx/conf.d/"
        mode: 0644
      notify: reload nginx

    - name: Disable absolute redirects
      lineinfile:
        line: "absolute_redirect off;"
        dest: "/etc/nginx/conf.d/no_absolute_redirects.conf"
        create: yes
        mode: 0644
      notify: reload nginx

    - name: Setup ttyd proxy snippet
      copy:
        src: nginx/ttydconsole.conf
        dest: "/etc/nginx/snippets/"
        mode: 0644
      notify: reload nginx

    - name: Enable ttyd proxy snippet
      lineinfile:
        path: "/etc/nginx/sites-available/default"
        line: "include /etc/nginx/snippets/ttydconsole.conf;"
        insertbefore: "^\\s*location / {.*$"
      notify: reload nginx

    - name: Deploy static website
      copy:
        src: ../../ripe-app-frontend/build/
        dest: /var/www/html/
        owner: www-data
        group: www-data
        mode: 0644

    - name: Deploy version file
      copy:
        src: ../../version.txt
        dest: /var/www/html/
        owner: www-data
        group: www-data
        mode: 0644

    - name: Route everything to index.html page
      lineinfile:
        path: "/etc/nginx/sites-available/default"
        line: "		try_files $uri /index.html;"
        regexp: '^\s*try_files \$uri'
      notify: reload nginx

    - name: Start Nginx
      service:
        name: nginx
        state: started
        enabled: on

    - name: Download ttyd
      get_url:
        url: "https://github.com/tsl0922/ttyd/releases/download/1.7.3/ttyd.{{ ansible_architecture }}"
        dest: /opt/ttyd
        mode: 0755

    - name: Deploy tmux config file
      copy:
        src: tmux.conf
        dest: "/etc/"
        mode: 0644

    - name: Deploy ttyd-container unit files
      template:
        src: "systemd/{{ item }}"
        dest: "/etc/systemd/system/"
        mode: 0644
      notify: systemctl daemon-reload
      with_items:
        - ttyd-container@.service
        - ttyd-admin.service
        - ttyd-container.target

    - name: Deploy ttyd-container generator
      template:
        src: systemd/ttyd-container.generator
        dest: "/etc/systemd/system-generators/"
        mode: 0755
      notify: systemctl daemon-reload

    - name: Enable and start ttyd-container target
      service:
        name: ttyd-container.target
        state: started
        enabled: on

    - name: Enable and start ttyd-admin
      service:
        name: ttyd-admin.service
        state: started
        enabled: on

    - name: Trim unused Btrfs space for LXD
      command: nsenter -m/run/snapd/ns/lxd.mnt fstrim -av
      become: true
      changed_when: false

    - name: Trim unused host space
      command: fstrim -av
      become: true
      changed_when: false

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded

    - name: systemctl daemon-reload
      systemd:
        daemon_reload: yes


...
